	.file	"ttask.c"
	.text
	.type	foo._omp_cpyfn.4, @function
foo._omp_cpyfn.4:
.LFB21:
	.cfi_startproc
	movl	(%rsi), %eax
	movl	%eax, 8(%rdi)
	movq	result(%rip), %rax
	movq	%rax, (%rdi)
	ret
	.cfi_endproc
.LFE21:
	.size	foo._omp_cpyfn.4, .-foo._omp_cpyfn.4
	.type	foo._omp_fn.2, @function
foo._omp_fn.2:
.LFB19:
	.cfi_startproc
	movslq	(%rdi), %rax
	lock addq	%rax, result(%rip)
	ret
	.cfi_endproc
.LFE19:
	.size	foo._omp_fn.2, .-foo._omp_fn.2
	.type	foo._omp_fn.1, @function
foo._omp_fn.1:
.LFB18:
	.cfi_startproc
	movl	$10, %eax
	movslq	(%rdi), %rdx
.L4:
	lock addq	%rdx, result(%rip)
	decq	%rax
	jne	.L4
	ret
	.cfi_endproc
.LFE18:
	.size	foo._omp_fn.1, .-foo._omp_fn.1
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC0:
	.string	"Hello from third task, up to now result=%ld and argum = %d\n"
	.text
	.type	foo._omp_fn.3, @function
foo._omp_fn.3:
.LFB20:
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	movl	8(%rdi), %edx
	movq	(%rdi), %rsi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE20:
	.size	foo._omp_fn.3, .-foo._omp_fn.3
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC1:
	.string	"All threads created"
	.text
	.type	foo._omp_fn.0, @function
foo._omp_fn.0:
.LFB17:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	xorl	%eax, %eax
	leaq	.LC1(%rip), %rdi
	call	puts@PLT
	movl	$1, 4(%rsp)
	leaq	4(%rsp), %rsi
	subq	$8, %rsp
	.cfi_def_cfa_offset 56
	pushq	$0
	.cfi_def_cfa_offset 64
	pushq	$0
	.cfi_def_cfa_offset 72
	pushq	$0
	.cfi_def_cfa_offset 80
	movl	$1, %r9d
	movl	$4, %r8d
	movl	$4, %ecx
	movl	$0, %edx
	leaq	foo._omp_fn.1(%rip), %rdi
	call	GOMP_task@PLT
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	movl	$1, %ebx
	leaq	4(%rsp), %rbp
.L10:
	incl	%ebx
	movl	%ebx, 4(%rsp)
	subq	$8, %rsp
	.cfi_def_cfa_offset 56
	pushq	$0
	.cfi_def_cfa_offset 64
	pushq	$0
	.cfi_def_cfa_offset 72
	pushq	$0
	.cfi_def_cfa_offset 80
	movl	$1, %r9d
	movl	$4, %r8d
	movl	$4, %ecx
	movl	$0, %edx
	movq	%rbp, %rsi
	leaq	foo._omp_fn.2(%rip), %rdi
	call	GOMP_task@PLT
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	cmpl	$11, %ebx
	jne	.L10
	movl	$11, 4(%rsp)
	leaq	4(%rsp), %rsi
	subq	$8, %rsp
	.cfi_def_cfa_offset 56
	pushq	$0
	.cfi_def_cfa_offset 64
	pushq	$0
	.cfi_def_cfa_offset 72
	pushq	$0
	.cfi_def_cfa_offset 80
	movl	$1, %r9d
	movl	$8, %r8d
	movl	$16, %ecx
	leaq	foo._omp_cpyfn.4(%rip), %rdx
	leaq	foo._omp_fn.3(%rip), %rdi
	call	GOMP_task@PLT
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	movq	8(%rsp), %rax
	xorq	%fs:40, %rax
	jne	.L17
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L17:
	.cfi_restore_state
	call	__stack_chk_fail@PLT
	.cfi_endproc
.LFE17:
	.size	foo._omp_fn.0, .-foo._omp_fn.0
	.globl	foo
	.type	foo, @function
foo:
.LFB15:
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	movl	$0, %ecx
	movl	$0, %edx
	movl	$0, %esi
	leaq	foo._omp_fn.0(%rip), %rdi
	call	GOMP_parallel@PLT
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE15:
	.size	foo, .-foo
	.section	.rodata.str1.8
	.align 8
.LC2:
	.string	"Back in main ... result = %ld\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB16:
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	movl	$0, %eax
	call	foo
	movq	result(%rip), %rsi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	$0, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE16:
	.size	main, .-main
	.globl	result
	.bss
	.align 8
	.type	result, @object
	.size	result, 8
result:
	.zero	8
	.ident	"GCC: (GNU) 8.2.1 20181127"
	.section	.note.GNU-stack,"",@progbits
